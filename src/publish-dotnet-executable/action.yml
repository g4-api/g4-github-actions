name: 'Publish Executable Project'
description: 'Builds and publishes an executable .NET project.'
inputs:
  build_version:
    description: 'Build version'
    required: true

  project_name:
    description: 'Name of the project'
    required: true

  project_type:
    description: 'Type of the project file (e.g., csproj or sln)'
    required: true
    
  dotnet_version:
    description: 'Version of .NET SDK to use'
    default: '8'
runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: src/checkout@v4

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet_version }}

    - name: Restore Packages
      shell: pwsh
      run: |
        $projectFile = (Get-ChildItem -Path . -Filter "${{ inputs.project_name }}.${{ inputs.project_type }}" -Recurse).FullName
        dotnet restore $projectFile

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Publish
      shell: pwsh
      run: |
        $projectFile = (Get-ChildItem -Path . -Filter "${{ inputs.project_name }}.${{ inputs.project_type }}" -Recurse).FullName
        $publishDir = "${{ env.RUNNER_TEMP }}/publish"
        msbuild $projectFile /t:Publish /p:Configuration=Release /p:PublishDir=$publishDir

    - name: Create Build Artifact
      shell: pwsh
      run: |
        $artifactDir = "${{ env.RUNNER_TEMP }}/artifact"
        New-Item -Path $artifactDir -ItemType Directory -Force
        $zipPath = "$artifactDir/${{ inputs.project_name }}.${{ inputs.build_version }}-win-linux-x64.zip"
        Compress-Archive -Path "$publishDir/*" -DestinationPath $zipPath

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.project_name }}
        path: "$artifactDir/*.zip"
